// Generated by CoffeeScript 2.7.0
var indexOf = [].indexOf;

import {
  g,
  print,
  range,
  scalex,
  scaley
} from './globals.js';

export var Lista = class Lista {
  constructor(objects = [], columnTitles = "", buttons = {}, drawFunction = null) { // a list of players. Or a list of pairs of players
    this.objects = objects;
    this.columnTitles = columnTitles;
    this.buttons = buttons;
    this.drawFunction = drawFunction;
    this.N = this.objects.length;
    this.paintYellowRow = true;
    this.errors = []; // list with index of erroneous rows
    this.currentRow = 0;
    this.offset = 0;
    this.adjustOffset(0);
  }

  draw() { // ritar de rader som syns i fönstret enbart
    var i, iRow, j, len, p, ref, results, s, w;
    s = this.columnTitles;
    fill('white');
    textAlign(window.LEFT);
    text(s, 10, scaley(4));
    fill('black');
    ref = range(g.LPP);
    // i inom fönstret
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      i = ref[j];
      iRow = this.offset + i; // index till listan
      if (iRow >= this.N) {
        continue;
      }
      p = this.objects[iRow];
      s = this.drawFunction(p, i, iRow);
      if (iRow === this.currentRow) {
        fill('yellow');
        w = this.paintYellowRow ? width : scaley(23.4);
        rect(0, scaley(i + 4.5), w, scaley(1));
        fill('black');
      }
      fill(indexOf.call(this.errors, iRow) >= 0 ? 'red' : 'black');
      results.push(text(s, 10, scaley(i + 5)));
    }
    return results;
  }

  keyPressed(event, key) {
    return this.buttons[key].click();
  }

  mouseWheel(event) {
    return this.adjustOffset(event.delta < 0 ? -1 : 1);
  }

  mousePressed() {
    var button, key, ref, results;
    if (mouseY < scaley(4)) {
      ref = this.buttons;
      results = [];
      for (key in ref) {
        button = ref[key];
        if (button.active && button.inside(mouseX, mouseY)) {
          results.push(button.click());
        } else {
          results.push(void 0);
        }
      }
      return results;
    } else {
      return this.adjustOffset(round(mouseY / g.ZOOM[g.state] - 5 - this.currentRow + this.offset));
    }
  }

  adjustOffset(delta) {
    var ref;
    if ((0 <= (ref = this.currentRow + delta) && ref < this.N)) {
      this.currentRow += delta;
    }
    if (this.currentRow < this.offset) {
      return this.offset = this.currentRow;
    } else {
      if (this.currentRow >= this.offset + g.LPP) {
        return this.offset = this.currentRow - g.LPP + 1;
      }
    }
  }

  ArrowUp() {
    if (this.currentRow > 0) {
      return this.adjustOffset(-1);
    }
  }

  ArrowDown() {
    if (this.currentRow < this.N - 1) {
      return this.adjustOffset(+1);
    }
  }

  PageUp() {
    if (this.currentRow > 0) {
      return this.adjustOffset(Math.max(this.currentRow - g.LPP, 0) - this.currentRow);
    }
  }

  PageDown() {
    if (this.currentRow < this.N - 1) {
      return this.adjustOffset(Math.min(this.currentRow + g.LPP, this.N - 1) - this.currentRow);
    }
  }

  Home() {
    return this.adjustOffset(0 - this.currentRow);
  }

  End() {
    return this.adjustOffset(this.N - 1 - this.currentRow);
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdGEuanMiLCJzb3VyY2VSb290IjoiLi5cXCIsInNvdXJjZXMiOlsiY29mZmVlXFxsaXN0YS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUE7O0FBQUEsT0FBQTtFQUFTLENBQVQ7RUFBVyxLQUFYO0VBQWlCLEtBQWpCO0VBQXVCLE1BQXZCO0VBQThCLE1BQTlCO0NBQUEsTUFBQTs7QUFFQSxPQUFBLElBQWEsUUFBTixNQUFBLE1BQUE7RUFDTixXQUFjLFdBQVUsRUFBVixpQkFBNEIsRUFBNUIsWUFBeUMsQ0FBQSxDQUF6QyxpQkFBMkQsSUFBM0QsQ0FBQSxFQUFBO0lBQUMsSUFBQyxDQUFBO0lBQVksSUFBQyxDQUFBO0lBQWlCLElBQUMsQ0FBQTtJQUFZLElBQUMsQ0FBQTtJQUMzRCxJQUFDLENBQUEsQ0FBRCxHQUFLLElBQUMsQ0FBQSxPQUFPLENBQUM7SUFDZCxJQUFDLENBQUEsY0FBRCxHQUFrQjtJQUNsQixJQUFDLENBQUEsTUFBRCxHQUFVLEdBRlo7SUFHRSxJQUFDLENBQUEsVUFBRCxHQUFjO0lBQ2QsSUFBQyxDQUFBLE1BQUQsR0FBVTtJQUNWLElBQUMsQ0FBQSxZQUFELENBQWMsQ0FBZDtFQU5hOztFQVFkLElBQU8sQ0FBQSxDQUFBLEVBQUE7QUFDUixRQUFBLENBQUEsRUFBQSxJQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBLE9BQUEsRUFBQSxDQUFBLEVBQUE7SUFBRSxDQUFBLEdBQUksSUFBQyxDQUFBO0lBQ0wsSUFBQSxDQUFLLE9BQUw7SUFDQSxTQUFBLENBQVUsTUFBTSxDQUFDLElBQWpCO0lBQ0EsSUFBQSxDQUFLLENBQUwsRUFBTyxFQUFQLEVBQVUsTUFBQSxDQUFPLENBQVAsQ0FBVjtJQUVBLElBQUEsQ0FBSyxPQUFMO0FBQ0E7O0FBQUE7SUFBQSxLQUFBLHFDQUFBOztNQUNDLElBQUEsR0FBTyxJQUFDLENBQUEsTUFBRCxHQUFVLEVBQXBCO01BQ0csSUFBRyxJQUFB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QUFZLENBQUEsQ0FBQTtJQUFHLElBQUcsSUFBQyxDQUFBLFVBQUQsR0FBYyxDQUFqQjthQUE2QixJQUFDLENBQUEsWUFBRCxDQUFjLElBQUksQ0FBQyxHQUFMLENBQVMsSUFBQyxDQUFBLFVBQUQsR0FBYyxDQUFDLENBQUMsR0FBekIsRUFBOEIsQ0FBOUIsQ0FBQSxHQUFtQyxJQUFDLENBQUEsVUFBbEQsRUFBN0I7O0VBQUg7O0VBQ1osUUFBWSxDQUFBLENBQUE7SUFBRyxJQUFHLElBQUMsQ0FBQSxVQUFELEdBQWMsSUFBQyxDQUFBLENBQUQsR0FBSyxDQUF0QjthQUE2QixJQUFDLENBQUEsWUFBRCxDQUFjLElBQUksQ0FBQyxHQUFMLENBQVMsSUFBQyxDQUFBLFVBQUQsR0FBYyxDQUFDLENBQUMsR0FBekIsRUFBOEIsSUFBQyxDQUFBLENBQUQsR0FBSyxDQUFuQyxDQUFBLEdBQXdDLElBQUMsQ0FBQSxVQUF2RCxFQUE3Qjs7RUFBSDs7RUFDWixJQUFZLENBQUEsQ0FBQTtXQUFHLElBQUMsQ0FBQSxZQUFELENBQWMsQ0FBQSxHQUFJLElBQUMsQ0FBQSxVQUFuQjtFQUFIOztFQUNaLEdBQVksQ0FBQSxDQUFBO1dBQUcsSUFBQyxDQUFBLFlBQUQsQ0FBYyxJQUFDLENBQUEsQ0FBRCxHQUFHLENBQUgsR0FBTyxJQUFDLENBQUEsVUFBdEI7RUFBSDs7QUFqRE4iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnLHByaW50LHJhbmdlLHNjYWxleCxzY2FsZXkgfSBmcm9tICcuL2dsb2JhbHMuanMnIFxyXG5cclxuZXhwb3J0IGNsYXNzIExpc3RhXHJcblx0Y29uc3RydWN0b3IgOiAoQG9iamVjdHM9W10sIEBjb2x1bW5UaXRsZXM9XCJcIiwgQGJ1dHRvbnM9e30sIEBkcmF3RnVuY3Rpb249bnVsbCkgLT4gIyBhIGxpc3Qgb2YgcGxheWVycy4gT3IgYSBsaXN0IG9mIHBhaXJzIG9mIHBsYXllcnNcclxuXHRcdEBOID0gQG9iamVjdHMubGVuZ3RoXHJcblx0XHRAcGFpbnRZZWxsb3dSb3cgPSB0cnVlXHJcblx0XHRAZXJyb3JzID0gW10gIyBsaXN0IHdpdGggaW5kZXggb2YgZXJyb25lb3VzIHJvd3NcclxuXHRcdEBjdXJyZW50Um93ID0gMFxyXG5cdFx0QG9mZnNldCA9IDBcclxuXHRcdEBhZGp1c3RPZmZzZXQgMFxyXG5cclxuXHRkcmF3IDogLT4gIyByaXRhciBkZSByYWRlciBzb20gc3lucyBpIGbDtm5zdHJldCBlbmJhcnRcclxuXHRcdHMgPSBAY29sdW1uVGl0bGVzXHJcblx0XHRmaWxsICd3aGl0ZSdcclxuXHRcdHRleHRBbGlnbiB3aW5kb3cuTEVGVFxyXG5cdFx0dGV4dCBzLDEwLHNjYWxleSg0KVxyXG5cclxuXHRcdGZpbGwgJ2JsYWNrJ1xyXG5cdFx0Zm9yIGkgaW4gcmFuZ2UgZy5MUFAgIyBpIGlub20gZsO2bnN0cmV0XHJcblx0XHRcdGlSb3cgPSBAb2Zmc2V0ICsgaSAjIGluZGV4IHRpbGwgbGlzdGFuXHJcblx0XHRcdGlmIGlSb3cgPj0gQE4gdGhlbiBjb250aW51ZVxyXG5cdFx0XHRwID0gQG9iamVjdHNbaVJvd11cclxuXHRcdFx0cyA9IEBkcmF3RnVuY3Rpb24gcCwgaSwgaVJvd1xyXG5cdFx0XHRpZiBpUm93ID09IEBjdXJyZW50Um93XHJcblx0XHRcdFx0ZmlsbCAneWVsbG93J1xyXG5cdFx0XHRcdHcgPSBpZiBAcGFpbnRZZWxsb3dSb3cgdGhlbiB3aWR0aCBlbHNlIHNjYWxleSgyMy40KVxyXG5cdFx0XHRcdHJlY3QgMCwgc2NhbGV5KGkgKyA0LjUpLCB3LCBzY2FsZXkoMSlcclxuXHRcdFx0XHRmaWxsICdibGFjaydcclxuXHRcdFx0ZmlsbCBpZiBpUm93IGluIEBlcnJvcnMgdGhlbiAncmVkJyBlbHNlICdibGFjaydcclxuXHRcdFx0dGV4dCBzLDEwLCBzY2FsZXkoaSArIDUpXHJcblxyXG5cdGtleVByZXNzZWQgOiAoZXZlbnQsIGtleSkgLT4gQGJ1dHRvbnNba2V5XS5jbGljaygpXHJcblx0bW91c2VXaGVlbCA6IChldmVudCkgLT4gQGFkanVzdE9mZnNldCBpZiBldmVudC5kZWx0YSA8IDAgdGhlbiAtMSBlbHNlIDFcclxuXHRtb3VzZVByZXNzZWQgOiAtPiBcclxuXHRcdGlmIG1vdXNlWSA8IHNjYWxleSg0KVxyXG5cdFx0XHRmb3Iga2V5LGJ1dHRvbiBvZiBAYnV0dG9uc1xyXG5cdFx0XHRcdGlmIGJ1dHRvbi5hY3RpdmUgYW5kIGJ1dHRvbi5pbnNpZGUgbW91c2VYLG1vdXNlWSB0aGVuIGJ1dHRvbi5jbGljaygpXHJcblx0XHRlbHNlXHJcblx0XHRcdEBhZGp1c3RPZmZzZXQgcm91bmQgbW91c2VZIC8gZy5aT09NW2cuc3RhdGVdIC0gNSAtIEBjdXJyZW50Um93ICsgQG9mZnNldFxyXG5cclxuXHRhZGp1c3RPZmZzZXQgOiAoZGVsdGEpIC0+XHJcblx0XHRpZiAwIDw9IEBjdXJyZW50Um93ICsgZGVsdGEgPCBATiB0aGVuIEBjdXJyZW50Um93ICs9IGRlbHRhXHJcblx0XHRpZiBAY3VycmVudFJvdyA8IEBvZmZzZXQgdGhlbiBAb2Zmc2V0ID0gQGN1cnJlbnRSb3dcclxuXHRcdGVsc2UgXHJcblx0XHRcdGlmIEBjdXJyZW50Um93ID49IEBvZmZzZXQgKyBnLkxQUCB0aGVuIEBvZmZzZXQgPSBAY3VycmVudFJvdyAtIGcuTFBQICsgMVxyXG5cclxuXHRBcnJvd1VwICAgOiAtPiBpZiBAY3VycmVudFJvdyA+IDAgICAgICB0aGVuIEBhZGp1c3RPZmZzZXQgLTFcclxuXHRBcnJvd0Rvd24gOiAtPiBpZiBAY3VycmVudFJvdyA8IEBOIC0gMSB0aGVuIEBhZGp1c3RPZmZzZXQgKzFcclxuXHRQYWdlVXAgICAgOiAtPiBpZiBAY3VycmVudFJvdyA+IDAgICAgICB0aGVuIEBhZGp1c3RPZmZzZXQoTWF0aC5tYXgoQGN1cnJlbnRSb3cgLSBnLkxQUCwgMCkgLSBAY3VycmVudFJvdyApXHJcblx0UGFnZURvd24gIDogLT4gaWYgQGN1cnJlbnRSb3cgPCBATiAtIDEgdGhlbiBAYWRqdXN0T2Zmc2V0KE1hdGgubWluKEBjdXJyZW50Um93ICsgZy5MUFAsIEBOIC0gMSkgLSBAY3VycmVudFJvdylcclxuXHRIb21lICAgICAgOiAtPiBAYWRqdXN0T2Zmc2V0IDAgLSBAY3VycmVudFJvd1xyXG5cdEVuZCAgICAgICA6IC0+IEBhZGp1c3RPZmZzZXQgQE4tMSAtIEBjdXJyZW50Um93XHJcbiJdfQ==
//# sourceURL=c:\github\ELO-Pairings\coffee\lista.coffee