// Generated by CoffeeScript 2.7.0
var indexOf = [].indexOf;

import {
  g,
  print,
  range,
  scalex,
  scaley
} from './globals.js';

export var Lista = class Lista {
  constructor(objects = [], columnTitles = "", buttons = {}, drawFunction = null) { // a list of players. Or a list of pairs of players
    this.objects = objects;
    this.columnTitles = columnTitles;
    this.buttons = buttons;
    this.drawFunction = drawFunction;
    //(g.LPP+10)//2 # den skall alltid visas i mitten
    this.N = this.objects.length;
    this.paintYellowRow = true;
    this.errors = []; // list with index of erroneous rows
    this.currentRow = 0;
    this.PageDown();
  }

  draw() { // ritar de rader som syns i fönstret enbart
    var a, b, delta, i, iRow, len, p, r, ref, results, s, w, y;
    s = this.columnTitles;
    fill('white');
    textAlign(window.LEFT);
    text(s, 10, scaley(4));
    y = Math.floor((2 + g.LPP) / 2); // mitten av skärmen
    fill('black');
    r = g.tournament.round - 1;
    a = Math.floor((1 - g.LPP) / 2);
    b = Math.floor((1 + g.LPP) / 2);
    ref = range(a, b);
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      delta = ref[i];
      iRow = this.currentRow + delta;
      if (iRow < 0) {
        continue;
      }
      if (iRow >= this.N) {
        continue;
      }
      p = this.objects[iRow];
      s = this.drawFunction(p, iRow);
      if (iRow === this.currentRow) {
        fill('yellow');
        w = this.paintYellowRow ? width : scaley(23.4);
        rect(0, scaley(y + 3.5), w, scaley(1));
        fill('black');
      }
      fill(indexOf.call(this.errors, iRow) >= 0 ? 'red' : 'black');
      results.push(text(s, 10, scaley(y + delta + 4)));
    }
    return results;
  }

  keyPressed(event, key) {
    return this.buttons[key].click();
  }

  mouseWheel(event) {
    return this.move(event.delta < 0 ? -1 : 1);
  }

  mousePressed() {
    var button, key, ref, results;
    if (mouseY > scaley(4)) {
      return this.move(round(mouseY / g.ZOOM[g.state] - g.LPP / 2 - 4 - 1));
    } else {
      ref = this.buttons;
      results = [];
      for (key in ref) {
        button = ref[key];
        if (button.active && button.inside(mouseX, mouseY)) {
          results.push(button.click());
        } else {
          results.push(void 0);
        }
      }
      return results;
    }
  }

  ArrowUp() {
    return this.move(-1);
  }

  ArrowDown() {
    return this.move(1);
  }

  PageUp() {
    return this.move(Math.floor(-g.LPP / 2));
  }

  PageDown() {
    return this.move(Math.floor(g.LPP / 2));
  }

  Home() {
    return this.move(-this.currentRow);
  }

  End() {
    return this.move(this.N - this.currentRow);
  }

  move(delta) {
    this.currentRow += delta;
    if (this.currentRow < 0) {
      this.currentRow = 0;
    }
    if (this.currentRow >= this.N) {
      this.currentRow = this.N - 1;
    }
    return event.preventDefault();
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdGEuanMiLCJzb3VyY2VSb290IjoiLi5cXCIsInNvdXJjZXMiOlsiY29mZmVlXFxsaXN0YS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUE7O0FBQUEsT0FBQTtFQUFTLENBQVQ7RUFBVyxLQUFYO0VBQWlCLEtBQWpCO0VBQXVCLE1BQXZCO0VBQThCLE1BQTlCO0NBQUEsTUFBQTs7QUFFQSxPQUFBLElBQWEsUUFBTixNQUFBLE1BQUE7RUFDTixXQUFjLFdBQVUsRUFBVixpQkFBNEIsRUFBNUIsWUFBeUMsQ0FBQSxDQUF6QyxpQkFBMkQsSUFBM0QsQ0FBQSxFQUFBO0lBQUMsSUFBQyxDQUFBO0lBQVksSUFBQyxDQUFBO0lBQWlCLElBQUMsQ0FBQTtJQUFZLElBQUMsQ0FBQSw0QkFFN0Q7O0lBQUUsSUFBQyxDQUFBLENBQUQsR0FBSyxJQUFDLENBQUEsT0FBTyxDQUFDO0lBQ2QsSUFBQyxDQUFBLGNBQUQsR0FBa0I7SUFDbEIsSUFBQyxDQUFBLE1BQUQsR0FBVSxHQUZaO0lBR0UsSUFBQyxDQUFBLFVBQUQsR0FBYztJQUNkLElBQUMsQ0FBQSxRQUFELENBQUE7RUFOYTs7RUFRZCxJQUFPLENBQUEsQ0FBQSxFQUFBO0FBQ1IsUUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEtBQUEsRUFBQSxDQUFBLEVBQUEsSUFBQSxFQUFBLEdBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxPQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQTtJQUFFLENBQUEsR0FBSSxJQUFDLENBQUE7SUFDTCxJQUFBLENBQUssT0FBTDtJQUNBLFNBQUEsQ0FBVSxNQUFNLENBQUMsSUFBakI7SUFDQSxJQUFBLENBQUssQ0FBTCxFQUFPLEVBQVAsRUFBVSxNQUFBLENBQU8sQ0FBUCxDQUFWO0lBRUEsQ0FBQSxjQUFJLENBQUMsQ0FBQSxHQUFJLENBQUMsQ0FBQyxHQUFQLElBQWEsR0FMbkI7SUFNRSxJQUFBLENBQUssT0FBTDtJQUNBLENBQUEs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QUEsQ0FBRCxHQUFLLElBQUMsQ0FBQSxVQUFaO0VBQUg7O0VBRVosSUFBTyxDQUFDLEtBQUQsQ0FBQTtJQUNOLElBQUMsQ0FBQSxVQUFELElBQWU7SUFDZixJQUFHLElBQUMsQ0FBQSxVQUFELEdBQWMsQ0FBakI7TUFBd0IsSUFBQyxDQUFBLFVBQUQsR0FBYyxFQUF0Qzs7SUFDQSxJQUFHLElBQUMsQ0FBQSxVQUFELElBQWUsSUFBQyxDQUFBLENBQW5CO01BQTBCLElBQUMsQ0FBQSxVQUFELEdBQWMsSUFBQyxDQUFBLENBQUQsR0FBRyxFQUEzQzs7V0FDQSxLQUFLLENBQUMsY0FBTixDQUFBO0VBSk07O0FBbEREIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZyxwcmludCxyYW5nZSxzY2FsZXgsc2NhbGV5IH0gZnJvbSAnLi9nbG9iYWxzLmpzJyBcclxuXHJcbmV4cG9ydCBjbGFzcyBMaXN0YVxyXG5cdGNvbnN0cnVjdG9yIDogKEBvYmplY3RzPVtdLCBAY29sdW1uVGl0bGVzPVwiXCIsIEBidXR0b25zPXt9LCBAZHJhd0Z1bmN0aW9uPW51bGwpIC0+ICMgYSBsaXN0IG9mIHBsYXllcnMuIE9yIGEgbGlzdCBvZiBwYWlycyBvZiBwbGF5ZXJzXHJcblx0XHQjKGcuTFBQKzEwKS8vMiAjIGRlbiBza2FsbCBhbGx0aWQgdmlzYXMgaSBtaXR0ZW5cclxuXHRcdEBOID0gQG9iamVjdHMubGVuZ3RoXHJcblx0XHRAcGFpbnRZZWxsb3dSb3cgPSB0cnVlXHJcblx0XHRAZXJyb3JzID0gW10gIyBsaXN0IHdpdGggaW5kZXggb2YgZXJyb25lb3VzIHJvd3NcclxuXHRcdEBjdXJyZW50Um93ID0gMCBcclxuXHRcdEBQYWdlRG93bigpXHJcblxyXG5cdGRyYXcgOiAtPiAjIHJpdGFyIGRlIHJhZGVyIHNvbSBzeW5zIGkgZsO2bnN0cmV0IGVuYmFydFxyXG5cdFx0cyA9IEBjb2x1bW5UaXRsZXNcclxuXHRcdGZpbGwgJ3doaXRlJ1xyXG5cdFx0dGV4dEFsaWduIHdpbmRvdy5MRUZUXHJcblx0XHR0ZXh0IHMsMTAsc2NhbGV5KDQpXHJcblxyXG5cdFx0eSA9ICgyICsgZy5MUFApLy8yICMgbWl0dGVuIGF2IHNrw6RybWVuXHJcblx0XHRmaWxsICdibGFjaydcclxuXHRcdHIgPSBnLnRvdXJuYW1lbnQucm91bmQgLSAxXHJcblx0XHRhID0gKDEtZy5MUFApLy8yXHJcblx0XHRiID0gKDErZy5MUFApLy8yXHJcblx0XHRmb3IgZGVsdGEgaW4gcmFuZ2UgYSxiXHJcblx0XHRcdGlSb3cgPSBAY3VycmVudFJvdyArIGRlbHRhXHJcblx0XHRcdGlmIGlSb3cgPCAwIHRoZW4gY29udGludWVcclxuXHRcdFx0aWYgaVJvdyA+PSBATiB0aGVuIGNvbnRpbnVlXHJcblx0XHRcdHAgPSBAb2JqZWN0c1tpUm93XVxyXG5cdFx0XHRzID0gQGRyYXdGdW5jdGlvbiBwLCBpUm93XHJcblx0XHRcdGlmIGlSb3cgPT0gQGN1cnJlbnRSb3dcclxuXHRcdFx0XHRmaWxsICd5ZWxsb3cnXHJcblx0XHRcdFx0dyA9IGlmIEBwYWludFllbGxvd1JvdyB0aGVuIHdpZHRoIGVsc2Ugc2NhbGV5KDIzLjQpXHJcblx0XHRcdFx0cmVjdCAwLCBzY2FsZXkoeSArIDMuNSksIHcsIHNjYWxleSgxKVxyXG5cdFx0XHRcdGZpbGwgJ2JsYWNrJ1xyXG5cdFx0XHRmaWxsIGlmIGlSb3cgaW4gQGVycm9ycyB0aGVuICdyZWQnIGVsc2UgJ2JsYWNrJ1xyXG5cdFx0XHR0ZXh0IHMsMTAsIHNjYWxleSh5ICsgZGVsdGErNClcclxuXHJcblx0a2V5UHJlc3NlZCA6IChldmVudCwga2V5KSAtPiBAYnV0dG9uc1trZXldLmNsaWNrKClcclxuXHRtb3VzZVdoZWVsIDogKGV2ZW50KSAtPiBAbW92ZSBpZiBldmVudC5kZWx0YSA8IDAgdGhlbiAtMSBlbHNlIDFcclxuXHRtb3VzZVByZXNzZWQgOiAtPiBcclxuXHRcdGlmIG1vdXNlWSA+IHNjYWxleSg0KVxyXG5cdFx0XHRAbW92ZSByb3VuZCBtb3VzZVkgLyBnLlpPT01bZy5zdGF0ZV0gLSBnLkxQUC8yIC0gNCAtIDFcclxuXHRcdGVsc2VcclxuXHRcdFx0Zm9yIGtleSxidXR0b24gb2YgQGJ1dHRvbnNcclxuXHRcdFx0XHRpZiBidXR0b24uYWN0aXZlIGFuZCBidXR0b24uaW5zaWRlIG1vdXNlWCxtb3VzZVkgdGhlbiBidXR0b24uY2xpY2soKVxyXG5cclxuXHRBcnJvd1VwICAgOiAtPiBAbW92ZSAtMVxyXG5cdEFycm93RG93biA6IC0+IEBtb3ZlIDFcclxuXHRQYWdlVXAgICAgOiAtPiBAbW92ZSAtZy5MUFAvLzIgXHJcblx0UGFnZURvd24gIDogLT4gQG1vdmUgZy5MUFAvLzJcclxuXHRIb21lICAgICAgOiAtPiBAbW92ZSAtQGN1cnJlbnRSb3dcclxuXHRFbmQgICAgICAgOiAtPiBAbW92ZSBATiAtIEBjdXJyZW50Um93XHJcblxyXG5cdG1vdmUgOiAoZGVsdGEpIC0+XHJcblx0XHRAY3VycmVudFJvdyArPSBkZWx0YVxyXG5cdFx0aWYgQGN1cnJlbnRSb3cgPCAwIHRoZW4gQGN1cnJlbnRSb3cgPSAwXHJcblx0XHRpZiBAY3VycmVudFJvdyA+PSBATiB0aGVuIEBjdXJyZW50Um93ID0gQE4tMVxyXG5cdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKSJdfQ==
//# sourceURL=c:\github\Dense\coffee\lista.coffee