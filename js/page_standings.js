// Generated by CoffeeScript 2.7.0
import {
  g,
  print,
  range,
  scalex,
  scaley
} from './globals.js';

import {
  Page
} from './page.js';

import {
  Button,
  spread
} from './button.js';

import {
  Lista
} from './lista.js';

export var Standings = class Standings extends Page {
  constructor() {
    super();
    this.t = g.tournament;
    this.buttons.ArrowLeft = new Button('', '', () => {
      return g.setState(g.ACTIVE);
    });
    this.buttons.ArrowRight = new Button('', '', () => {
      return g.setState(g.TABLES);
    });
    this.buttons.s.active = false;
  }

  setLista() {
    var header, p, rheader;
    rheader = _.map(range(1, this.t.round + 1), function(i) {
      return `${i % 10} `;
    });
    rheader = rheader.join(' ');
    header = "";
    header += g.txtT("Pos", 3, window.RIGHT);
    header += ' ' + g.txtT("Id", 3, window.RIGHT);
    header += ' ' + g.txtT("Elo", 4, window.RIGHT);
    header += ' ' + g.txtT("Name", 25, window.LEFT);
    header += ' ' + g.txtT(rheader, 3 * this.round, window.LEFT);
    header += ' ' + g.txtT("Elos", 8, window.RIGHT);
    this.playersByEloSum = _.clone(this.t.persons.slice(0, g.N));
    this.playersByEloSum = _.sortBy(this.playersByEloSum, (p) => {
      return -p.eloSum(this.t.round);
    });
    print((function() {
      var j, len, ref, results;
      ref = this.playersByEloSum;
      results = [];
      for (j = 0, len = ref.length; j < len; j++) {
        p = ref[j];
        results.push(p.eloSum(this.t.round));
      }
      return results;
    }).call(this));
    this.lista = new Lista(this.playersByEloSum, header, this.buttons, (p, index, pos) => { // returnera strängen som ska skrivas ut. Dessutom ritas lightbulbs här.
      var j, len, r, ref, s, x;
      this.y_bulb = (5 + index) * g.ZOOM[g.state];
      textAlign(LEFT);
      fill('black');
      s = "";
      s += g.txtT((1 + pos).toString(), 3, window.RIGHT);
      s += ' ' + g.txtT((1 + p.id).toString(), 3, window.RIGHT);
      s += ' ' + g.txtT(p.elo.toString(), 4, window.RIGHT);
      s += ' ' + g.txtT(p.name, 25, window.LEFT);
      s += ' ' + g.txtT('', 3 * (this.t.round - 1), window.CENTER);
      s += ' ' + g.txtT(p.eloSum(this.t.round - 1).toFixed(1), 7, window.RIGHT);
      ref = range(g.tournament.round);
      //- 1
      for (j = 0, len = ref.length; j < len; j++) {
        r = ref[j];
        x = g.ZOOM[g.state] * (24.2 + 1.8 * r);
        if (p.opp[r] === -1) {
          this.txt("P", x, this.y + 1, window.CENTER, 'black');
        } else if (p.opp[r] === g.N) {
          this.txt("BYE", x, this.y + 1, window.CENTER, 'black');
        } else {
          this.lightbulb(p.col[r], x, this.y_bulb, p.res.slice(r, r + 1), 1 + p.opp[r]);
        }
      }
      return s;
    });
    this.lista.paintYellowRow = false;
    return spread(this.buttons, 10, this.y, this.h);
  }

  mouseWheel(event) {
    return this.lista.mouseWheel(event);
  }

  mousePressed(event) {
    return this.lista.mousePressed(event);
  }

  keyPressed(event) {
    return this.buttons[key].click();
  }

  draw() {
    var button, key, ref, results;
    fill('white');
    this.showHeader(this.t.round - 1);
    this.lista.draw();
    ref = this.buttons;
    results = [];
    for (key in ref) {
      button = ref[key];
      results.push(button.draw());
    }
    return results;
  }

  lightbulb(color, x, y, result, opponent) {
    if (result === "") {
      return;
    }
    push();
    result = '012'.indexOf(result);
    fill('red gray green'.split(' ')[result]);
    rectMode(window.CENTER);
    rect(x, y, 1.6 * g.ZOOM[g.state], 0.9 * g.ZOOM[g.state]);
    fill({
      b: 'black',
      ' ': 'yellow',
      w: 'white'
    }[color]);
    this.txt(opponent, x, y + 1, window.CENTER);
    return pop();
  }

  make(res, header) {
    var i, j, k, l, len, len1, len2, person, r, ref, ref1, ref2, s;
    if (this.t.pairs.length === 0) {
      res.push("This ROUND can't be paired! (Too many rounds)");
    }
    res.push("STANDINGS" + header);
    res.push("");
    header = "";
    header += g.txtT("Pos", 3, window.RIGHT);
    header += ' ' + g.txtT('Id', 3, window.RIGHT);
    header += ' ' + g.txtT("Elo", 4, window.RIGHT);
    header += ' ' + g.txtT("Name", 25, window.LEFT);
    ref = range(this.t.round);
    for (j = 0, len = ref.length; j < len; j++) {
      r = ref[j];
      header += g.txtT(`${r + 1}`, 6, window.RIGHT);
    }
    header += ' ' + g.txtT("Elos", 9, window.RIGHT);
    if (this.t.round <= this.expl) {
      header += '  ' + g.txtT("Explanation", 12, window.LEFT);
    }
    ref1 = this.playersByEloSum;
    for (i = k = 0, len1 = ref1.length; k < len1; i = ++k) {
      person = ref1[i];
      if (i % this.t.ppp === 0) {
        res.push(header);
      }
      s = "";
      s += g.txtT((1 + i).toString(), 3, window.RIGHT);
      s += ' ' + g.txtT((1 + person.id).toString(), 3, window.RIGHT);
      s += ' ' + g.txtT(person.elo.toString(), 4, window.RIGHT);
      s += ' ' + g.txtT(person.name, 25, window.LEFT);
      s += ' ';
      ref2 = range(this.t.round);
      for (l = 0, len2 = ref2.length; l < len2; l++) {
        r = ref2[l];
        if (person.opp[r] === -1) {
          s += '      ';
        } else {
          s += g.txtT(`${1 + person.opp[r]}${g.RINGS[person.col[r][0]]}${"0½1"[person.res[r]]}`, 6, window.RIGHT);
        }
      }
      s += ' ' + g.txtT(person.eloSum(this.t.round).toFixed(1), 8, window.RIGHT);
      res.push(s);
      if (i % this.t.ppp === this.t.ppp - 1) {
        res.push("\f");
      }
    }
    return res.push("\f");
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZV9zdGFuZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi5cXCIsInNvdXJjZXMiOlsiY29mZmVlXFxwYWdlX3N0YW5kaW5ncy5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQUE7RUFBUyxDQUFUO0VBQVcsS0FBWDtFQUFpQixLQUFqQjtFQUF1QixNQUF2QjtFQUE4QixNQUE5QjtDQUFBLE1BQUE7O0FBQ0EsT0FBQTtFQUFTLElBQVQ7Q0FBQSxNQUFBOztBQUNBLE9BQUE7RUFBUyxNQUFUO0VBQWdCLE1BQWhCO0NBQUEsTUFBQTs7QUFDQSxPQUFBO0VBQVMsS0FBVDtDQUFBLE1BQUE7O0FBRUEsT0FBQSxJQUFhLFlBQU4sTUFBQSxVQUFBLFFBQXdCLEtBQXhCO0VBRU4sV0FBYyxDQUFBLENBQUE7U0FDYixDQUFBO0lBQ0EsSUFBQyxDQUFBLENBQUQsR0FBSyxDQUFDLENBQUM7SUFDUCxJQUFDLENBQUEsT0FBTyxDQUFDLFNBQVQsR0FBc0IsSUFBSSxNQUFKLENBQVcsRUFBWCxFQUFlLEVBQWYsRUFBbUIsQ0FBQSxDQUFBLEdBQUE7YUFBTSxDQUFDLENBQUMsUUFBRixDQUFXLENBQUMsQ0FBQyxNQUFiO0lBQU4sQ0FBbkI7SUFDdEIsSUFBQyxDQUFBLE9BQU8sQ0FBQyxVQUFULEdBQXNCLElBQUksTUFBSixDQUFXLEVBQVgsRUFBZSxFQUFmLEVBQW1CLENBQUEsQ0FBQSxHQUFBO2FBQU0sQ0FBQyxDQUFDLFFBQUYsQ0FBVyxDQUFDLENBQUMsTUFBYjtJQUFOLENBQW5CO0lBQ3RCLElBQUMsQ0FBQSxPQUFPLENBQUMsQ0FBQyxDQUFDLE1BQVgsR0FBb0I7RUFMUDs7RUFPZCxRQUFXLENBQUEsQ0FBQTtBQUVaLFFBQUEsTUFBQSxFQUFBLENBQUEsRUFBQTtJQUFFLE9BQUEsR0FBVSxDQUFDLENBQUMsR0FBRixDQUFNLEtBQUEsQ0FBTSxDQUFOLEVBQVEsSUFBQyxDQUFBLENBQUMsQ0FBQyxLQUFILEdBQVMsQ0FBakIsQ0FBTixFQUEyQixR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R0FBSSxJQUFDLENBQUEsQ0FBQyxDQUFDLEdBQVAsS0FBYyxJQUFDLENBQUEsQ0FBQyxDQUFDLEdBQUgsR0FBTyxDQUF4QjtRQUErQixHQUFHLENBQUMsSUFBSixDQUFTLElBQVQsRUFBL0I7O0lBZkQ7V0FnQkEsR0FBRyxDQUFDLElBQUosQ0FBUyxJQUFUO0VBaENNOztBQXJFRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGcscHJpbnQscmFuZ2Usc2NhbGV4LHNjYWxleSB9IGZyb20gJy4vZ2xvYmFscy5qcycgXHJcbmltcG9ydCB7IFBhZ2UgfSBmcm9tICcuL3BhZ2UuanMnIFxyXG5pbXBvcnQgeyBCdXR0b24sc3ByZWFkIH0gZnJvbSAnLi9idXR0b24uanMnICBcclxuaW1wb3J0IHsgTGlzdGEgfSBmcm9tICcuL2xpc3RhLmpzJyBcclxuXHJcbmV4cG9ydCBjbGFzcyBTdGFuZGluZ3MgZXh0ZW5kcyBQYWdlXHJcblxyXG5cdGNvbnN0cnVjdG9yIDogLT5cclxuXHRcdHN1cGVyKClcclxuXHRcdEB0ID0gZy50b3VybmFtZW50XHJcblx0XHRAYnV0dG9ucy5BcnJvd0xlZnQgID0gbmV3IEJ1dHRvbiAnJywgJycsICgpID0+IGcuc2V0U3RhdGUgZy5BQ1RJVkVcclxuXHRcdEBidXR0b25zLkFycm93UmlnaHQgPSBuZXcgQnV0dG9uICcnLCAnJywgKCkgPT4gZy5zZXRTdGF0ZSBnLlRBQkxFU1xyXG5cdFx0QGJ1dHRvbnMucy5hY3RpdmUgPSBmYWxzZVxyXG5cclxuXHRzZXRMaXN0YSA6IC0+XHJcblxyXG5cdFx0cmhlYWRlciA9IF8ubWFwIHJhbmdlKDEsQHQucm91bmQrMSksIChpKSAtPiBcIiN7aSUxMH0gXCJcclxuXHRcdHJoZWFkZXIgPSByaGVhZGVyLmpvaW4gJyAnXHJcblx0XHRoZWFkZXIgPSBcIlwiXHJcblx0XHRoZWFkZXIgKz0gICAgICAgZy50eHRUIFwiUG9zXCIsICAgICAgICAgIDMsd2luZG93LlJJR0hUXHJcblx0XHRoZWFkZXIgKz0gJyAnICsgZy50eHRUIFwiSWRcIiwgICAgICAgICAgIDMsd2luZG93LlJJR0hUXHJcblx0XHRoZWFkZXIgKz0gJyAnICsgZy50eHRUIFwiRWxvXCIsICAgICAgICAgIDQsd2luZG93LlJJR0hUXHJcblx0XHRoZWFkZXIgKz0gJyAnICsgZy50eHRUIFwiTmFtZVwiLCAgICAgICAgMjUsd2luZG93LkxFRlRcclxuXHRcdGhlYWRlciArPSAnICcgKyBnLnR4dFQgcmhlYWRlciwgMypAcm91bmQsd2luZG93LkxFRlQgXHJcblx0XHRoZWFkZXIgKz0gJyAnICsgZy50eHRUIFwiRWxvc1wiLCAgICAgICAgIDgsd2luZG93LlJJR0hUXHJcblxyXG5cdFx0QHBsYXllcnNCeUVsb1N1bSA9IF8uY2xvbmUgQHQucGVyc29ucy5zbGljZSAwLGcuTlxyXG5cdFx0QHBsYXllcnNCeUVsb1N1bSA9IF8uc29ydEJ5IEBwbGF5ZXJzQnlFbG9TdW0sIChwKSA9PiAtcC5lbG9TdW0oQHQucm91bmQpXHJcblxyXG5cdFx0cHJpbnQgKHAuZWxvU3VtKEB0LnJvdW5kKSBmb3IgcCBpbiBAcGxheWVyc0J5RWxvU3VtKVxyXG5cclxuXHRcdEBsaXN0YSA9IG5ldyBMaXN0YSBAcGxheWVyc0J5RWxvU3VtLCBoZWFkZXIsIEBidXR0b25zLCAocCxpbmRleCxwb3MpID0+ICMgcmV0dXJuZXJhIHN0csOkbmdlbiBzb20gc2thIHNrcml2YXMgdXQuIERlc3N1dG9tIHJpdGFzIGxpZ2h0YnVsYnMgaMOkci5cclxuXHRcdFx0QHlfYnVsYiA9ICg1ICsgaW5kZXgpICogZy5aT09NW2cuc3RhdGVdIFxyXG5cdFx0XHR0ZXh0QWxpZ24gTEVGVFxyXG5cdFx0XHRmaWxsICdibGFjaycgXHJcblx0XHRcdHMgPSBcIlwiXHJcblx0XHRcdHMgKz0gICAgICAgZy50eHRUICgxK3BvcykudG9TdHJpbmcoKSwgICAgIDMsIHdpbmRvdy5SSUdIVFxyXG5cdFx0XHRzICs9ICcgJyArIGcudHh0VCAoMStwLmlkKS50b1N0cmluZygpLCAgICAzLCB3aW5kb3cuUklHSFRcclxuXHRcdFx0cyArPSAnICcgKyBnLnR4dFQgcC5lbG8udG9TdHJpbmcoKSwgICAgICAgNCwgd2luZG93LlJJR0hUXHJcblx0XHRcdHMgKz0gJyAnICsgZy50eHRUIHAubmFtZSwgICAgICAgICAgICAgICAgMjUsIHdpbmRvdy5MRUZUXHJcblx0XHRcdHMgKz0gJyAnICsgZy50eHRUICcnLCAgICAgIDMgKiAoQHQucm91bmQtMSksIHdpbmRvdy5DRU5URVJcclxuXHRcdFx0cyArPSAnICcgKyBnLnR4dFQgcC5lbG9TdW0oQHQucm91bmQtMSkudG9GaXhlZCgxKSwgIDcsIHdpbmRvdy5SSUdIVFxyXG5cclxuXHRcdFx0Zm9yIHIgaW4gcmFuZ2UgZy50b3VybmFtZW50LnJvdW5kICMtIDFcclxuXHRcdFx0XHR4ID0gZy5aT09NW2cuc3RhdGVdICogKDI0LjIgKyAxLjgqcilcclxuXHRcdFx0XHRpZiBwLm9wcFtyXSA9PSAtMSB0aGVuIEB0eHQgXCJQXCIsIHgsIEB5KzEsIHdpbmRvdy5DRU5URVIsICdibGFjaydcclxuXHRcdFx0XHRlbHNlIGlmIHAub3BwW3JdID09IGcuTiB0aGVuIEB0eHQgXCJCWUVcIiwgeCwgQHkrMSwgd2luZG93LkNFTlRFUiwgJ2JsYWNrJ1xyXG5cdFx0XHRcdGVsc2UgQGxpZ2h0YnVsYiBwLmNvbFtyXSwgeCwgQHlfYnVsYiwgcC5yZXMuc2xpY2UocixyKzEpLCAxICsgcC5vcHBbcl1cclxuXHRcdFx0c1xyXG5cdFx0QGxpc3RhLnBhaW50WWVsbG93Um93ID0gZmFsc2VcclxuXHRcdHNwcmVhZCBAYnV0dG9ucywgMTAsIEB5LCBAaFxyXG5cclxuXHRtb3VzZVdoZWVsICAgOiAoZXZlbnQgKS0+IEBsaXN0YS5tb3VzZVdoZWVsIGV2ZW50XHJcblx0bW91c2VQcmVzc2VkIDogKGV2ZW50KSAtPiBAbGlzdGEubW91c2VQcmVzc2VkIGV2ZW50XHJcblx0a2V5UHJlc3NlZCAgIDogKGV2ZW50KSAtPiBAYnV0dG9uc1trZXldLmNsaWNrKClcclxuXHJcblx0ZHJhdyA6IC0+XHJcblx0XHRmaWxsICd3aGl0ZSdcclxuXHRcdEBzaG93SGVhZGVyIEB0LnJvdW5kLTFcclxuXHRcdEBsaXN0YS5kcmF3KClcclxuXHRcdGZvciBrZXksYnV0dG9uIG9mIEBidXR0b25zXHJcblx0XHRcdGJ1dHRvbi5kcmF3KClcclxuXHJcblx0bGlnaHRidWxiIDogKGNvbG9yLCB4LCB5LCByZXN1bHQsIG9wcG9uZW50KSAtPlxyXG5cdFx0aWYgcmVzdWx0ID09IFwiXCIgdGhlbiByZXR1cm5cclxuXHRcdHB1c2goKVxyXG5cdFx0cmVzdWx0ID0gJzAxMicuaW5kZXhPZiByZXN1bHRcclxuXHRcdGZpbGwgJ3JlZCBncmF5IGdyZWVuJy5zcGxpdCgnICcpW3Jlc3VsdF1cclxuXHRcdHJlY3RNb2RlIHdpbmRvdy5DRU5URVJcclxuXHRcdHJlY3QgeCwgeSwgMS42ICogZy5aT09NW2cuc3RhdGVdLCAwLjkgKiBnLlpPT01bZy5zdGF0ZV1cclxuXHRcdGZpbGwge2I6J2JsYWNrJywgJyAnOid5ZWxsb3cnLCB3Oid3aGl0ZSd9W2NvbG9yXVxyXG5cdFx0QHR4dCBvcHBvbmVudCx4LHkrMSx3aW5kb3cuQ0VOVEVSXHJcblx0XHRwb3AoKVx0XHRcdFxyXG5cclxuXHRtYWtlIDogKHJlcyxoZWFkZXIpIC0+XHJcblx0XHRpZiBAdC5wYWlycy5sZW5ndGggPT0gMCB0aGVuIHJlcy5wdXNoIFwiVGhpcyBST1VORCBjYW4ndCBiZSBwYWlyZWQhIChUb28gbWFueSByb3VuZHMpXCJcclxuXHJcblx0XHRyZXMucHVzaCBcIlNUQU5ESU5HU1wiICsgaGVhZGVyXHJcblx0XHRyZXMucHVzaCBcIlwiXHJcblxyXG5cdFx0aGVhZGVyID0gXCJcIlxyXG5cdFx0aGVhZGVyICs9ICAgICAgIGcudHh0VCBcIlBvc1wiLCAgIDMsIHdpbmRvdy5SSUdIVFxyXG5cdFx0aGVhZGVyICs9ICcgJyArIGcudHh0VCAnSWQnLCAgICAzLCB3aW5kb3cuUklHSFRcclxuXHRcdGhlYWRlciArPSAnICcgKyBnLnR4dFQgXCJFbG9cIiwgICA0LCB3aW5kb3cuUklHSFRcclxuXHRcdGhlYWRlciArPSAnICcgKyBnLnR4dFQgXCJOYW1lXCIsIDI1LCB3aW5kb3cuTEVGVFxyXG5cdFx0Zm9yIHIgaW4gcmFuZ2UgQHQucm91bmRcclxuXHRcdFx0aGVhZGVyICs9IGcudHh0VCBcIiN7cisxfVwiLDYsd2luZG93LlJJR0hUXHJcblx0XHRoZWFkZXIgKz0gJyAnICsgZy50eHRUIFwiRWxvc1wiLCA5LHdpbmRvdy5SSUdIVFxyXG5cdFx0aWYgQHQucm91bmQgPD0gQGV4cGwgdGhlbiBoZWFkZXIgKz0gJyAgJyArIGcudHh0VCBcIkV4cGxhbmF0aW9uXCIsIDEyLHdpbmRvdy5MRUZUXHJcblx0XHRcclxuXHRcdGZvciBwZXJzb24saSBpbiBAcGxheWVyc0J5RWxvU3VtXHJcblx0XHRcdGlmIGkgJSBAdC5wcHAgPT0gMCB0aGVuIHJlcy5wdXNoIGhlYWRlclxyXG5cdFx0XHRzID0gXCJcIlxyXG5cdFx0XHRzICs9ICAgICAgIGcudHh0VCAoMStpKS50b1N0cmluZygpLCAgICAgICAgICAzLCB3aW5kb3cuUklHSFRcclxuXHRcdFx0cyArPSAnICcgKyBnLnR4dFQgKDErcGVyc29uLmlkKS50b1N0cmluZygpLCAgMywgd2luZG93LlJJR0hUXHJcblx0XHRcdHMgKz0gJyAnICsgZy50eHRUIHBlcnNvbi5lbG8udG9TdHJpbmcoKSwgICAgIDQsIHdpbmRvdy5SSUdIVFxyXG5cdFx0XHRzICs9ICcgJyArIGcudHh0VCBwZXJzb24ubmFtZSwgICAgICAgICAgICAgIDI1LCB3aW5kb3cuTEVGVFxyXG5cdFx0XHRzICs9ICcgJ1xyXG5cdFx0XHRmb3IgciBpbiByYW5nZSBAdC5yb3VuZFxyXG5cdFx0XHRcdGlmIHBlcnNvbi5vcHBbcl0gPT0gLTFcclxuXHRcdFx0XHRcdHMgKz0gJyAgICAgICdcclxuXHRcdFx0XHRlbHNlIFxyXG5cdFx0XHRcdFx0cyArPSBnLnR4dFQgXCIjezErcGVyc29uLm9wcFtyXX0je2cuUklOR1NbcGVyc29uLmNvbFtyXVswXV19I3tcIjDCvTFcIltwZXJzb24ucmVzW3JdXX1cIiwgNiwgd2luZG93LlJJR0hUXHRcdFx0XHJcblx0XHRcdHMgKz0gJyAnICsgZy50eHRUIHBlcnNvbi5lbG9TdW0oQHQucm91bmQpLnRvRml4ZWQoMSksICA4LCB3aW5kb3cuUklHSFRcclxuXHRcdFx0cmVzLnB1c2ggcyBcclxuXHRcdFx0aWYgaSAlIEB0LnBwcCA9PSBAdC5wcHAtMSB0aGVuIHJlcy5wdXNoIFwiXFxmXCJcclxuXHRcdHJlcy5wdXNoIFwiXFxmXCIiXX0=
//# sourceURL=c:\github\ELO-Pairings\coffee\page_standings.coffee