// Generated by CoffeeScript 2.7.0
import {
  g,
  print,
  range,
  scalex,
  scaley
} from './globals.js';

import {
  Page
} from './page.js';

import {
  Button,
  spread
} from './button.js';

import {
  Lista
} from './lista.js';

export var Active = class Active extends Page {
  constructor() {
    super();
    if (g.tournament.round === 0) {
      this.buttons.t.active = false;
      this.buttons.n.active = false;
      this.buttons.s.active = false;
    }
    this.buttons.ArrowLeft = new Button('', '', () => {
      return g.setState(g.NAMES);
    });
    this.buttons.ArrowRight = new Button('', '', () => {
      return g.setState(g.STANDINGS);
    });
    this.buttons.p = new Button('Pair', 'P = Perform pairing now', () => {
      this.buttons.t.active = true;
      this.buttons.n.active = true;
      this.buttons.s.active = true;
      return this.t.lotta();
    });
    this.buttons[' '] = new Button('toggle', 'space = pause/activate', () => {
      return this.t.playersByName[g.pages[g.state].lista.currentRow].toggle();
    });
    this.buttons.a.active = false;
    this.buttons.a.help = this.HELP;
    this.setLista();
  }

  setLista() {
    this.lista = new Lista(this.t.playersByName, "Pause Name", this.buttons, function(p) {
      var s;
      s = p.active ? '      ' : 'pause ';
      return s + g.txtT(p.name, 25, window.LEFT);
    });
    return spread(this.buttons, 10, this.y, this.h);
  }

  draw() {
    var button, key, ref, results;
    fill('white');
    this.showHeader(this.t.round);
    this.lista.draw();
    ref = this.buttons;
    results = [];
    for (key in ref) {
      button = ref[key];
      results.push(button.draw());
    }
    return results;
  }

  mouseWheel(event) {
    return this.lista.mouseWheel(event);
  }

  mousePressed(event) {
    return this.lista.mousePressed(event);
  }

  keyPressed(event) {
    if (this.buttons[key].active || (key === 'p' || key === ' ')) {
      return this.buttons[key].click();
    }
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZV9hY3RpdmUuanMiLCJzb3VyY2VSb290IjoiLi5cXCIsInNvdXJjZXMiOlsiY29mZmVlXFxwYWdlX2FjdGl2ZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQUE7RUFBUyxDQUFUO0VBQVcsS0FBWDtFQUFpQixLQUFqQjtFQUF1QixNQUF2QjtFQUE4QixNQUE5QjtDQUFBLE1BQUE7O0FBQ0EsT0FBQTtFQUFTLElBQVQ7Q0FBQSxNQUFBOztBQUNBLE9BQUE7RUFBUyxNQUFUO0VBQWdCLE1BQWhCO0NBQUEsTUFBQTs7QUFDQSxPQUFBO0VBQVMsS0FBVDtDQUFBLE1BQUE7O0FBRUEsT0FBQSxJQUFhLFNBQU4sTUFBQSxPQUFBLFFBQXFCLEtBQXJCO0VBRU4sV0FBYyxDQUFBLENBQUE7U0FDYixDQUFBO0lBRUEsSUFBRyxDQUFDLENBQUMsVUFBVSxDQUFDLEtBQWIsS0FBc0IsQ0FBekI7TUFDQyxJQUFDLENBQUEsT0FBTyxDQUFDLENBQUMsQ0FBQyxNQUFYLEdBQW9CO01BQ3BCLElBQUMsQ0FBQSxPQUFPLENBQUMsQ0FBQyxDQUFDLE1BQVgsR0FBb0I7TUFDcEIsSUFBQyxDQUFBLE9BQU8sQ0FBQyxDQUFDLENBQUMsTUFBWCxHQUFvQixNQUhyQjs7SUFLQSxJQUFDLENBQUEsT0FBTyxDQUFDLFNBQVQsR0FBc0IsSUFBSSxNQUFKLENBQVcsRUFBWCxFQUFlLEVBQWYsRUFBbUIsQ0FBQSxDQUFBLEdBQUE7YUFBTSxDQUFDLENBQUMsUUFBRixDQUFXLENBQUMsQ0FBQyxLQUFiO0lBQU4sQ0FBbkI7SUFDdEIsSUFBQyxDQUFBLE9BQU8sQ0FBQyxVQUFULEdBQXNCLElBQUksTUFBSixDQUFXLEVBQVgsRUFBZSxFQUFmLEVBQW1CLENBQUEsQ0FBQSxHQUFBO2FBQU0sQ0FBQyxDQUFDLFFBQUYsQ0FBVyxDQUFDLENBQUMsU0FBYjtJQUFOLENBQW5CO0lBQ3RCLElBQUMsQ0FBQSxPQUFPLENBQUMsQ0FBVCxHQUFzQixJQUFJLE1BQUosQ0FBVyxNQUFYLEVBQWtCLHlCQUFsQixFQUE2QyxDQUFBLENBQUEsR0FBQTtNQUNsRSxJQUFDLENBQUEsT0FBTyxDQUFDLENBQUMsQ0FBQyxNQUFYLEdBQW9CO01BQ3BCLElBQUMsQ0FBQSxPQUFPLENBQUMsQ0FBQyxDQUFDLE1BQVgsR0FBb0I7TUFDcEIsSUFBQyxDQUFBLE9BQU8sQ0FBQyxDQUFDLENBQUMsTUFBWCxHQUFvQjthQUNwQixJQUFDLENBQUEsQ0FBQyxDQUFDLEtBQUgsQ0FBQTtJQUprRSxDQUE3QztJQUt0QixJQUFDLENBQUEsT0FBTyxDQUFDLEdBQUQsQ0FBUixHQUFzQixJQUFJLE1BQUosQ0FBVyxRQUFYLEVBQXFCLHdCQUFyQixFQUNyQixDQUFBLENBQUEsR0FBQTthQUFNLElBQUMsQ0FBQSxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUgsQ0FBUyxDQUFDLEtBQUssQ0FBQyxVQUF4QixDQUFtQyxDQUFDLE1BQXBELENBQUE7SUFBTixDQURxQjtJQUd0QixJQUFDLENBQUEsT0FBTyxDQUFDLENBQUMsQ0FBQyxNQUFYLEdBQW9CO0lBQ3BCLElBQUMsQ0FBQSxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQVgsR0FBa0IsSUFBQyxDQUFBO0lBQ25CLElBQUMsQ0FBQSxRQUFELENBQUE7RUFwQmE7O0VBc0JkLFFBQVcsQ0FBQSxDQUFBO0lBQ1YsSUFBQyxDQUFBLEtBQUQsR0FBUyxJQUFJLEtBQUosQ0FBVSxJQUFDLENBQUEsQ0FBQyxDQUFDLGFBQWIsRUFBNEIsWUFBNUIsRUFBMEMsSUFBQyxDQUFBLE9BQTNDLEVBQW9ELFFBQUEsQ0FBQyxDQUFELENBQUE7QUFDL0QsVUFBQTtNQUFHLENBQUEsR0FBTyxDQUFDLENBQUMsTUFBTCxHQUFpQixRQUFqQixHQUErQjthQUNuQyxDQUFBLEdBQUksQ0FBQyxDQUFDLElBQUYsQ0FBTyxDQUFDLENBQUMsSUFBVCxFQUFlLEVBQWYsRUFBbUIsTUFBTSxDQUFDLElBQTFCO0lBRndELENBQXBEO1dBR1QsTUFBQSxDQUFPLElBQUMsQ0FBQSxPQUFSLEVBQWlCLEVBQWpCLEVBQXFCLElBQUMsQ0FBQSxDQUF0QixFQUF5QixJQUFDLENBQUEsQ0FBMUI7RUFKVTs7RUFNWCxJQUFPLENBQUEsQ0FBQTtBQUNSLFFBQUEsTUFBQSxFQUFBLEdBQUEsRUFBQSxHQUFBLEVBQUE7SUFBRSxJQUFBLENBQUssT0FBTDtJQUNBLElBQUMsQ0FBQSxVQUFELENBQVksSUFBQyxDQUFBLENBQUMsQ0FBQyxLQUFmO0lBQ0EsSUFBQyxDQUFBLEtBQUssQ0FBQyxJQUFQLENBQUE7QUFDQTtBQUFBO0lBQUEsS0FBQSxVQUFBOzttQkFDQyxNQUFNLENBQUMsSUFBUCxDQUFBO0lBREQsQ0FBQTs7RUFKTTs7RUFPUCxVQUFhLENBQUMsS0FBRCxDQUFBO1dBQVcsSUFBQyxDQUFBLEtBQUssQ0FBQyxVQUFQLENBQWtCLEtBQWxCO0VBQVg7O0VBQ2IsWUFBZSxDQUFDLEtBQUQsQ0FBQTtXQUFXLElBQUMsQ0FBQSxLQUFLLENBQUMsWUFBUCxDQUFvQixLQUFwQjtFQUFYOztFQUNmLFVBQWEsQ0FBQyxLQUFELENBQUE7SUFBVyxJQUFHLElBQUMsQ0FBQSxPQUFPLENBQUMsR0FBRCxDQUFLLENBQUMsTUFBZCxLQUF3QixRQUFRLE9BQVIsUUFBWSxJQUF2QzthQUFpRCxJQUFDLENBQUEsT0FBTyxDQUFDLEdBQUQsQ0FBSyxDQUFDLEtBQWQsQ0FBQSxFQUFqRDs7RUFBWDs7QUF2Q1AiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnLHByaW50LHJhbmdlLHNjYWxleCxzY2FsZXkgfSBmcm9tICcuL2dsb2JhbHMuanMnIFxyXG5pbXBvcnQgeyBQYWdlIH0gZnJvbSAnLi9wYWdlLmpzJyBcclxuaW1wb3J0IHsgQnV0dG9uLHNwcmVhZCB9IGZyb20gJy4vYnV0dG9uLmpzJyBcclxuaW1wb3J0IHsgTGlzdGEgfSBmcm9tICcuL2xpc3RhLmpzJyBcclxuXHJcbmV4cG9ydCBjbGFzcyBBY3RpdmUgZXh0ZW5kcyBQYWdlIFxyXG5cclxuXHRjb25zdHJ1Y3RvciA6IC0+XHJcblx0XHRzdXBlcigpXHJcblxyXG5cdFx0aWYgZy50b3VybmFtZW50LnJvdW5kID09IDBcclxuXHRcdFx0QGJ1dHRvbnMudC5hY3RpdmUgPSBmYWxzZVxyXG5cdFx0XHRAYnV0dG9ucy5uLmFjdGl2ZSA9IGZhbHNlXHJcblx0XHRcdEBidXR0b25zLnMuYWN0aXZlID0gZmFsc2VcclxuXHJcblx0XHRAYnV0dG9ucy5BcnJvd0xlZnQgID0gbmV3IEJ1dHRvbiAnJywgJycsICgpID0+IGcuc2V0U3RhdGUgZy5OQU1FU1xyXG5cdFx0QGJ1dHRvbnMuQXJyb3dSaWdodCA9IG5ldyBCdXR0b24gJycsICcnLCAoKSA9PiBnLnNldFN0YXRlIGcuU1RBTkRJTkdTXHJcblx0XHRAYnV0dG9ucy5wICAgICAgICAgID0gbmV3IEJ1dHRvbiAnUGFpcicsJ1AgPSBQZXJmb3JtIHBhaXJpbmcgbm93JywgKCkgPT4gXHJcblx0XHRcdEBidXR0b25zLnQuYWN0aXZlID0gdHJ1ZVxyXG5cdFx0XHRAYnV0dG9ucy5uLmFjdGl2ZSA9IHRydWVcclxuXHRcdFx0QGJ1dHRvbnMucy5hY3RpdmUgPSB0cnVlXHJcblx0XHRcdEB0LmxvdHRhKClcclxuXHRcdEBidXR0b25zWycgJ10gICAgICAgPSBuZXcgQnV0dG9uICd0b2dnbGUnLCAnc3BhY2UgPSBwYXVzZS9hY3RpdmF0ZScsIFxyXG5cdFx0XHQoKSA9PiBAdC5wbGF5ZXJzQnlOYW1lW2cucGFnZXNbZy5zdGF0ZV0ubGlzdGEuY3VycmVudFJvd10udG9nZ2xlKClcclxuXHJcblx0XHRAYnV0dG9ucy5hLmFjdGl2ZSA9IGZhbHNlXHJcblx0XHRAYnV0dG9ucy5hLmhlbHAgPSBASEVMUFxyXG5cdFx0QHNldExpc3RhKClcclxuXHJcblx0c2V0TGlzdGEgOiAtPlxyXG5cdFx0QGxpc3RhID0gbmV3IExpc3RhIEB0LnBsYXllcnNCeU5hbWUsIFwiUGF1c2UgTmFtZVwiLCBAYnV0dG9ucywgKHApIC0+XHJcblx0XHRcdHMgPSBpZiBwLmFjdGl2ZSB0aGVuICcgICAgICAnIGVsc2UgJ3BhdXNlICdcclxuXHRcdFx0cyArIGcudHh0VCBwLm5hbWUsIDI1LCB3aW5kb3cuTEVGVFxyXG5cdFx0c3ByZWFkIEBidXR0b25zLCAxMCwgQHksIEBoXHJcblxyXG5cdGRyYXcgOiAtPlxyXG5cdFx0ZmlsbCAnd2hpdGUnXHJcblx0XHRAc2hvd0hlYWRlciBAdC5yb3VuZFxyXG5cdFx0QGxpc3RhLmRyYXcoKVxyXG5cdFx0Zm9yIGtleSxidXR0b24gb2YgQGJ1dHRvbnNcclxuXHRcdFx0YnV0dG9uLmRyYXcoKVxyXG5cclxuXHRtb3VzZVdoZWVsIDogKGV2ZW50ICktPiBAbGlzdGEubW91c2VXaGVlbCBldmVudFxyXG5cdG1vdXNlUHJlc3NlZCA6IChldmVudCkgLT4gQGxpc3RhLm1vdXNlUHJlc3NlZCBldmVudFxyXG5cdGtleVByZXNzZWQgOiAoZXZlbnQpIC0+IGlmIEBidXR0b25zW2tleV0uYWN0aXZlIG9yIGtleSBpbiBbJ3AnLCcgJ10gdGhlbiBAYnV0dG9uc1trZXldLmNsaWNrKCkiXX0=
//# sourceURL=c:\github\Dense\coffee\page_active.coffee