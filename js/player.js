// Generated by CoffeeScript 2.7.0
var indexOf = [].indexOf;

import {
  g,
  print,
  range,
  scalex,
  scaley
} from './globals.js';

export var Player = class Player {
  constructor(id1, name = "", elo0 = "1400", opp = [], col1 = "", res1 = "", active = true) {
    this.id = id1;
    this.name = name;
    this.elo0 = elo0;
    this.opp = opp;
    this.col = col1;
    this.res = res1;
    this.active = active;
    this.cache = {};
    this.pos = []; // one for each round
  }

  
    // toString : -> "#{@id} #{@name} elo0:#{@elo0} #{@col} res:#{@res} opp:[#{@opp}] score:#{@score().toFixed(1)} elo:#{@elo(g.tournament.round).toFixed(0)}"
  toggle() {
    var p;
    this.active = !this.active;
    return g.tournament.paused = (function() {
      var j, len, ref, results;
      ref = g.tournament.persons;
      results = [];
      for (j = 0, len = ref.length; j < len; j++) {
        p = ref[j];
        if (!p.active) {
          results.push(p.id);
        }
      }
      return results;
    })();
  }

  bye() {
    var ref;
    return ref = g.BYE, indexOf.call(this.opp, ref) >= 0;
  }

  calcRound(r) {
    var a, b, diff;
    if (this.opp[r] === g.BYE) {
      return g.K * (1.0 - g.scoringProbability(0));
    }
    if (this.opp[r] === g.PAUSE) {
      return 0;
    }
    a = this.elo0;
    b = g.tournament.persons[this.opp[r]].elo0;
    diff = b - a;
    return g.K * (this.res[r] / 2 - g.scoringProbability(diff));
  }

  // if @res[r] == '1' then return g.K * (0.5 - g.scoringProbability diff)
  // if @res[r] == '0' then return g.K * (0.0 - g.scoringProbability diff)
  // 0
  elo(rounds) {
    var r;
    if (rounds in this.cache) {
      return this.cache[rounds];
    }
    return this.cache[rounds] = this.elo0 + g.sum((function() {
      var j, len, ref, results;
      ref = range(rounds);
      // latest elos
      results = [];
      for (j = 0, len = ref.length; j < len; j++) {
        r = ref[j];
        results.push(this.calcRound(r));
      }
      return results;
    }).call(this));
  }

  avgEloDiff() {
    var id, j, len, ref, res;
    res = [];
    ref = this.opp.slice(0, this.opp.length - 1);
    for (j = 0, len = ref.length; j < len; j++) {
      id = ref[j];
      if (id >= 0) {
        res.push(abs(this.elo0 - g.tournament.persons[id].elo0));
      }
    }
    if (res.length === 0) {
      return 0;
    } else {
      return g.sum(res) / res.length;
    }
  }

  balans() { // f√§rgbalans
    var ch, j, len, ref, result;
    result = 0;
    ref = this.col;
    for (j = 0, len = ref.length; j < len; j++) {
      ch = ref[j];
      if (ch === 'b') {
        result -= 1;
      }
      if (ch === 'w') {
        result += 1;
      }
    }
    return result;
  }

  read(player) {
    var arr, col, j, len, ocr, ocrs, results;
    this.elo0 = parseInt(player[0]);
    this.name = player[1];
    this.opp = [];
    this.col = "";
    this.res = "";
    if (player.length < 3) {
      return;
    }
    ocrs = player[2];
    results = [];
    for (j = 0, len = ocrs.length; j < len; j++) {
      ocr = ocrs[j];
      if (indexOf.call(ocr, 'w') >= 0) {
        col = 'w';
      } else {
        col = 'b';
      }
      arr = ocr.split(col);
      this.opp.push(parseInt(arr[0]));
      this.col += col;
      if (arr.length === 2 && arr[1].length === 1) {
        results.push(this.res += arr[1]);
      } else {
        results.push(void 0);
      }
    }
    return results;
  }

  write() { // (1234!Christer!(12w0!23b1!142)) Elo:1234 Name:Christer opponent:23 color:b result:1
    var i, ocr, r, res;
    res = [];
    res.push(this.elo0);
    res.push(this.name.replaceAll(' ', '_'));
    r = this.opp.length - 1;
    ocr = (function() {
      var j, len, ref, results;
      ref = range(r);
      results = [];
      for (j = 0, len = ref.length; j < len; j++) {
        i = ref[j];
        results.push(`${this.opp[i]}${this.col[i]}${i < r ? this.res[i] : ''}`);
      }
      return results;
    }).call(this);
    res.push('(' + ocr.join('!') + ')');
    return res.join('!');
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxheWVyLmpzIiwic291cmNlUm9vdCI6Ii4uXFwiLCJzb3VyY2VzIjpbImNvZmZlZVxccGxheWVyLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQTs7QUFBQSxPQUFBO0VBQVMsQ0FBVDtFQUFXLEtBQVg7RUFBaUIsS0FBakI7RUFBdUIsTUFBdkI7RUFBOEIsTUFBOUI7Q0FBQSxNQUFBOztBQUVBLE9BQUEsSUFBYSxTQUFOLE1BQUEsT0FBQTtFQUNOLFdBQWMsSUFBQSxTQUFZLEVBQVosU0FBc0IsTUFBdEIsUUFBbUMsRUFBbkMsU0FBNEMsRUFBNUMsU0FBcUQsRUFBckQsV0FBbUUsSUFBbkUsQ0FBQTtJQUFDLElBQUMsQ0FBQTtJQUFJLElBQUMsQ0FBQTtJQUFTLElBQUMsQ0FBQTtJQUFhLElBQUMsQ0FBQTtJQUFRLElBQUMsQ0FBQTtJQUFRLElBQUMsQ0FBQTtJQUFRLElBQUMsQ0FBQTtJQUN2RSxJQUFDLENBQUEsS0FBRCxHQUFTLENBQUE7SUFDVCxJQUFDLENBQUEsR0FBRCxHQUFPLEdBRk07RUFBQSxDQUFmOzs7O0VBTUMsTUFBUyxDQUFBLENBQUE7QUFDVixRQUFBO0lBQUUsSUFBQyxDQUFBLE1BQUQsR0FBVSxDQUFJLElBQUMsQ0FBQTtXQUNmLENBQUMsQ0FBQyxVQUFVLENBQUMsTUFBYjs7QUFBdUI7QUFBQTtNQUFBLEtBQUEscUNBQUE7O1lBQXdDLENBQUksQ0FBQyxDQUFDO3VCQUE5QyxDQUFDLENBQUM7O01BQUYsQ0FBQTs7O0VBRmY7O0VBSVQsR0FBTSxDQUFBLENBQUE7QUFBRSxRQUFBO2lCQUFDLENBQUMsQ0FBQyxrQkFBTyxJQUFDLENBQUEsS0FBVjtFQUFIOztFQUVOLFNBQVksQ0FBQyxDQUFELENBQUE7QUFDYixRQUFBLENBQUEsRUFBQSxDQUFBLEVBQUE7SUFBRSxJQUFHLElBQUMsQ0FBQSxHQUFHLENBQUMsQ0FBRCxDQUFKLEtBQVcsQ0FBQyxDQUFDLEdBQWhCO0FBQXlCLGFBQU8sQ0FBQyxDQUFDLENBQUYs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LEdBQUcsQ0FBQyxDQUFELENBQVosQ0FBVjtNQUNBLElBQUMsQ0FBQSxHQUFELElBQVE7TUFDUixJQUFHLEdBQUcsQ0FBQyxNQUFKLEtBQWMsQ0FBZCxJQUFvQixHQUFHLENBQUMsQ0FBRCxDQUFHLENBQUMsTUFBUCxLQUFpQixDQUF4QztxQkFBK0MsSUFBQyxDQUFBLEdBQUQsSUFBUSxHQUFHLENBQUMsQ0FBRCxHQUExRDtPQUFBLE1BQUE7NkJBQUE7O0lBTEQsQ0FBQTs7RUFSTTs7RUFlUCxLQUFRLENBQUEsQ0FBQSxFQUFBO0FBQ1QsUUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBLENBQUEsRUFBQTtJQUFFLEdBQUEsR0FBTTtJQUNOLEdBQUcsQ0FBQyxJQUFKLENBQVMsSUFBQyxDQUFBLElBQVY7SUFDQSxHQUFHLENBQUMsSUFBSixDQUFTLElBQUMsQ0FBQSxJQUFJLENBQUMsVUFBTixDQUFpQixHQUFqQixFQUFxQixHQUFyQixDQUFUO0lBQ0EsQ0FBQSxHQUFJLElBQUMsQ0FBQSxHQUFHLENBQUMsTUFBTCxHQUFjO0lBQ2xCLEdBQUE7O0FBQU87QUFBQTtNQUFBLEtBQUEscUNBQUE7O3FCQUFBLENBQUEsQ0FBQSxDQUFHLElBQUMsQ0FBQSxHQUFHLENBQUMsQ0FBRCxDQUFQLENBQUEsQ0FBQSxDQUFhLElBQUMsQ0FBQSxHQUFHLENBQUMsQ0FBRCxDQUFqQixDQUFBLENBQUEsQ0FBMEIsQ0FBQSxHQUFJLENBQVAsR0FBYyxJQUFDLENBQUEsR0FBRyxDQUFDLENBQUQsQ0FBbEIsR0FBMkIsRUFBbEQsQ0FBQTtNQUFBLENBQUE7OztJQUNQLEdBQUcsQ0FBQyxJQUFKLENBQVMsR0FBQSxHQUFNLEdBQUcsQ0FBQyxJQUFKLENBQVMsR0FBVCxDQUFOLEdBQXNCLEdBQS9CO1dBQ0EsR0FBRyxDQUFDLElBQUosQ0FBUyxHQUFUO0VBUE87O0FBeERGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZyxwcmludCxyYW5nZSxzY2FsZXgsc2NhbGV5IH0gZnJvbSAnLi9nbG9iYWxzLmpzJyBcclxuXHJcbmV4cG9ydCBjbGFzcyBQbGF5ZXJcclxuXHRjb25zdHJ1Y3RvciA6IChAaWQsIEBuYW1lPVwiXCIsIEBlbG8wPVwiMTQwMFwiLCBAb3BwPVtdLCBAY29sPVwiXCIsIEByZXM9XCJcIiwgQGFjdGl2ZSA9IHRydWUpIC0+IFxyXG5cdFx0QGNhY2hlID0ge31cclxuXHRcdEBwb3MgPSBbXSAjIG9uZSBmb3IgZWFjaCByb3VuZFxyXG5cclxuXHQjIHRvU3RyaW5nIDogLT4gXCIje0BpZH0gI3tAbmFtZX0gZWxvMDoje0BlbG8wfSAje0Bjb2x9IHJlczoje0ByZXN9IG9wcDpbI3tAb3BwfV0gc2NvcmU6I3tAc2NvcmUoKS50b0ZpeGVkKDEpfSBlbG86I3tAZWxvKGcudG91cm5hbWVudC5yb3VuZCkudG9GaXhlZCgwKX1cIlxyXG5cclxuXHR0b2dnbGUgOiAtPiBcclxuXHRcdEBhY3RpdmUgPSBub3QgQGFjdGl2ZVxyXG5cdFx0Zy50b3VybmFtZW50LnBhdXNlZCA9IChwLmlkIGZvciBwIGluIGcudG91cm5hbWVudC5wZXJzb25zIHdoZW4gbm90IHAuYWN0aXZlKVxyXG5cclxuXHRieWUgOiAtPiBnLkJZRSBpbiBAb3BwXHJcblxyXG5cdGNhbGNSb3VuZCA6IChyKSAtPlxyXG5cdFx0aWYgQG9wcFtyXSA9PSBnLkJZRSB0aGVuIHJldHVybiBnLksgKiAoMS4wIC0gZy5zY29yaW5nUHJvYmFiaWxpdHkgMClcclxuXHRcdGlmIEBvcHBbcl0gPT0gZy5QQVVTRSB0aGVuIHJldHVybiAwXHJcblx0XHRhID0gQGVsbzBcclxuXHRcdGIgPSBnLnRvdXJuYW1lbnQucGVyc29uc1tAb3BwW3JdXS5lbG8wXHJcblx0XHRkaWZmID0gYiAtIGFcclxuXHRcdGcuSyAqIChAcmVzW3JdLzIgLSBnLnNjb3JpbmdQcm9iYWJpbGl0eSBkaWZmKVxyXG5cdFx0IyBpZiBAcmVzW3JdID09ICcxJyB0aGVuIHJldHVybiBnLksgKiAoMC41IC0gZy5zY29yaW5nUHJvYmFiaWxpdHkgZGlmZilcclxuXHRcdCMgaWYgQHJlc1tyXSA9PSAnMCcgdGhlbiByZXR1cm4gZy5LICogKDAuMCAtIGcuc2NvcmluZ1Byb2JhYmlsaXR5IGRpZmYpXHJcblx0XHQjIDBcclxuXHJcblx0ZWxvIDogKHJvdW5kcykgLT5cclxuXHRcdGlmIHJvdW5kcyBvZiBAY2FjaGUgdGhlbiByZXR1cm4gQGNhY2hlW3JvdW5kc11cclxuXHRcdEBjYWNoZVtyb3VuZHNdID0gQGVsbzAgKyBnLnN1bSAoQGNhbGNSb3VuZCByIGZvciByIGluIHJhbmdlIHJvdW5kcykgIyBsYXRlc3QgZWxvc1xyXG5cclxuXHRhdmdFbG9EaWZmIDogLT5cclxuXHRcdHJlcyA9IFtdXHJcblx0XHRmb3IgaWQgaW4gQG9wcC5zbGljZSAwLCBAb3BwLmxlbmd0aCAtIDFcclxuXHRcdFx0aWYgaWQgPj0gMCB0aGVuIHJlcy5wdXNoIGFicyBAZWxvMCAtIGcudG91cm5hbWVudC5wZXJzb25zW2lkXS5lbG8wXHJcblx0XHRpZiByZXMubGVuZ3RoID09IDAgdGhlbiAwIGVsc2UgZy5zdW0ocmVzKSAvIHJlcy5sZW5ndGhcclxuXHJcblx0YmFsYW5zIDogLT4gIyBmw6RyZ2JhbGFuc1xyXG5cdFx0cmVzdWx0ID0gMFxyXG5cdFx0Zm9yIGNoIGluIEBjb2xcclxuXHRcdFx0aWYgY2g9PSdiJyB0aGVuIHJlc3VsdCAtPSAxXHJcblx0XHRcdGlmIGNoPT0ndycgdGhlbiByZXN1bHQgKz0gMVxyXG5cdFx0cmVzdWx0XHJcblxyXG5cdHJlYWQgOiAocGxheWVyKSAtPiBcclxuXHRcdEBlbG8wID0gcGFyc2VJbnQgcGxheWVyWzBdXHJcblx0XHRAbmFtZSA9IHBsYXllclsxXVxyXG5cdFx0QG9wcCA9IFtdXHJcblx0XHRAY29sID0gXCJcIlxyXG5cdFx0QHJlcyA9IFwiXCJcclxuXHRcdGlmIHBsYXllci5sZW5ndGggPCAzIHRoZW4gcmV0dXJuXHJcblx0XHRvY3JzID0gcGxheWVyWzJdXHJcblx0XHRmb3Igb2NyIGluIG9jcnNcclxuXHRcdFx0aWYgJ3cnIGluIG9jciB0aGVuIGNvbD0ndycgZWxzZSBjb2w9J2InXHJcblx0XHRcdGFyciA9IG9jci5zcGxpdCBjb2xcclxuXHRcdFx0QG9wcC5wdXNoIHBhcnNlSW50IGFyclswXVxyXG5cdFx0XHRAY29sICs9IGNvbFxyXG5cdFx0XHRpZiBhcnIubGVuZ3RoID09IDIgYW5kIGFyclsxXS5sZW5ndGggPT0gMSB0aGVuIEByZXMgKz0gYXJyWzFdXHJcblxyXG5cdHdyaXRlIDogLT4gIyAoMTIzNCFDaHJpc3RlciEoMTJ3MCEyM2IxITE0MikpIEVsbzoxMjM0IE5hbWU6Q2hyaXN0ZXIgb3Bwb25lbnQ6MjMgY29sb3I6YiByZXN1bHQ6MVxyXG5cdFx0cmVzID0gW11cclxuXHRcdHJlcy5wdXNoIEBlbG8wXHJcblx0XHRyZXMucHVzaCBAbmFtZS5yZXBsYWNlQWxsICcgJywnXydcclxuXHRcdHIgPSBAb3BwLmxlbmd0aCAtIDFcclxuXHRcdG9jciA9IChcIiN7QG9wcFtpXX0je0Bjb2xbaV19I3tpZiBpIDwgciB0aGVuIEByZXNbaV0gZWxzZSAnJ31cIiBmb3IgaSBpbiByYW5nZShyKSkgXHJcblx0XHRyZXMucHVzaCAnKCcgKyBvY3Iuam9pbignIScpICsgJyknXHJcblx0XHRyZXMuam9pbiAnISciXX0=
//# sourceURL=c:\github\ELO-Pairings\coffee\player.coffee